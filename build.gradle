plugins {
    id 'application'
    id 'java'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.openjfx.javafxplugin' version '0.0.13'
}

checkstyle {
    toolVersion = '11.0.0'
}

application {
    mainClass = 'Launcher'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    String javaFxVersion = '21.0.2'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
}

tasks.named('run') {
    standardInput = System.in
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'Launcher' //application.mainClass.get()
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    from sourceSets.main.output
    from sourceSets.main.resources

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
